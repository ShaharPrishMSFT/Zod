// AGENT: DO NOT CHANGE THIS FILE WITHOUT ASKING PERMISSION
// ────────── TOKENS ──────────
BEGIN          : "--begin"
END            : "--end"
COMMENT         : /[ \t]*#[^\n]*/                // line‑comment (may start with spaces/tabs)
INLINE_TEXT     : "[" /[^\]\n]*/ "]"             // e.g.  action [Some text]
EMBED_EXPR      : "{{" /[^}]*/ "}}"              // embedded formal expr inside natural text
ID              : /[A-Za-z_][A-Za-z0-9_.]*/      // dotted or simple identifier
// NAT_TEXT_LINE   : /(?!--end\b)(?!{{).+/         // any natural line not starting '--end' or '{{'
NAT_TEXT_LINE   : /(?m)^[ \t]*(?!\-\-(?:begin|end)\b)(?!{{).+[^\n]/
_NL             : /(\r?\n)+/
_WS             : /[ \t]+/

%ignore _WS
%ignore COMMENT

// ────────── ENTRY ──────────
start           : (_NL | decl)*

decl            : context_decl
                | function_decl
                | rule_decl

// ────────── TOP‑LEVEL DECLS ──────────
context_decl    : "context" ID? body
function_decl   : "function" ID body
rule_decl       : "rule" ID? body

// ────────── BODIES ──────────
body            : natural_block
                | formal_block

natural_block   : _NL? BEGIN _NL (nat_line _NL)* END _NL?
nat_line        : NAT_TEXT_LINE
                | EMBED_EXPR

formal_block    : _NL? "{" _NL stmt* "}" _NL?

// ────────── STATEMENTS ──────────
stmt            : _NL
                | action_stmt
                | input_stmt
                | if_stmt
                | when_stmt
                | nop_stmt

action_stmt     : "action" action_body
input_stmt      : "input"  input_body
nop_stmt        : "nop"

action_body     : INLINE_TEXT
                | natural_block
                | formal_block

input_body      : INLINE_TEXT
                | natural_block
                | formal_block

// ────────── CONTROL FLOW ──────────
if_stmt         : "if" expr "then" formal_block ["else" formal_block]
when_stmt       : "when" expr "then" formal_block

// ────────── EXPRESSIONS (MVP) ──────────
expr            : INLINE_TEXT     -> inline_expr
                | natural_block   -> natural_expr
                | formal_block    -> block_expr
                | ID              -> id_expr
